[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1440
PlayResY: 862

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: D:/Downloads/Telegram Desktop/电脑批量测试【原创首发】/新建文件夹 (2)/table.sort函数、table排序.mp4
Video File: D:/Downloads/Telegram Desktop/电脑批量测试【原创首发】/新建文件夹 (2)/table.sort函数、table排序.mp4
Video AR Mode: 4
Video AR Value: 1.670534
Video Zoom Percent: 0.625000
Scroll Position: 9
Active Line: 14
Video Position: 27070

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,更纱黑体 SC Semibold,46,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:22.71,Default,,0,0,0,,table.sort函数是用来给一个table排序的
Dialogue: 0,0:00:58.16,0:01:38.38,Default,,0,0,0,,table.sort函数可以填两个参数，如果只填一个参数的话，当然就要填一个table了\N然后sort函数就会根据默认的规则排序。比如你这样建一个里面是一堆数字的表，然后\N用table.sort(xx)就会对xx这个表进行排序了,它会默认的将里面的数字从小到大的排序
Dialogue: 0,0:01:38.38,0:02:27.48,Default,,0,0,0,,注意这里当然用法和之前讲的remove和insert函数一样，不要写成xx=table.sort(xx)\N而是要写table.sort(xx)，因为排序一样只是对表的操作，该函数又不是要返回一个表\N所以不需要xx=这种东西。然后当然你使用了sort这排序操作以后就意味着你原来的表\N已经改变了，比如你用了table.sort(xx)以后，你原来的xx就和刚刚不一样了,它被排序\N以后这个表就和原来不一样了，所以如果你不想改变xx这个表，当然就用之前讲的,复\N制个里面东西和xx一样的表，然后再对那个表排序即可
Dialogue: 0,0:02:27.48,0:02:34.98,Default,,0,0,0,,可以看到，现在这个xx表里面的数字就被从小到大的排序了
Dialogue: 0,0:02:34.98,0:03:00.00,Default,,0,0,0,,table.sort函数的第二个参数填一个自定义函数，用来设定排序的规则，当然如果不填\N第二个参数就是默认的规则排序，比如你有个表里是一堆英文字符串,那么它默认就根\N据首字母的字母表从小到大的顺序排序，如果有大写字母就先排大写字母
Dialogue: 0,0:03:00.00,0:03:24.35,Default,,0,0,0,,{\fs40}比如如果表里是"z","c","bb","azzxbc"的话，sort函数就会默认排序成"azzxbc","bb","c","z"\N而如果有大写字母的话，就先排大写的，\N比如"Z","c","bb","azzxbc"的话，就会默认排序为"Z","azzxbc","bb","c"
Dialogue: 0,0:03:24.35,0:04:05.35,Default,,0,0,0,,当然可以在第二个参数这里填一个自定义函数来设定你想要的排序规则\N参数的名字当然随便取，比如可以直接这样叫a和b，也可以叫f4h3和aaa\N然后这个自定义函数只能返回一个布尔值，也就是真值，当然你可以直接写一个判断语\N句,就像视频中的a>b,结果返回的这判断语句其实就是一个真值\N那么你最后return一个a>b的话，排序当然就会按照从大到小来排序了，刚刚默认的是\N从小到大
Dialogue: 0,0:05:27.66,0:05:31.88,Default,,0,0,0,,刚刚的function打错了，拼写错误所以报错
Dialogue: 0,0:05:52.24,0:05:59.99,Default,,0,0,0,,可以看到，现在自定义函数设定了一个规则以后，排序的结果就和刚刚默认的不一样了
Dialogue: 0,0:06:38.61,0:06:59.34,Default,,0,0,0,,刚刚说了自定义函数结果需要返回一个布尔值，所以你想要从大到小排序也可以这样写\Nfunction(a,b) if a>b then return true end  end
Dialogue: 0,0:08:26.11,0:08:37.48,Default,,0,0,0,,可以看到结果是一样的
Dialogue: 0,0:09:15.61,0:09:45.74,Default,,0,0,0,,如果是这样的英文的字符串，默认就会按照首字母在字母表中的从小到大的顺序排序\N当然有大写的话，就会先按照此规则排完大写的再排小写的。当然除了默认规则，你\N也可以在第二个参数那里填入一个自定义函数来设定排序规则
Dialogue: 0,0:11:45.08,0:12:43.94,Default,,0,0,0,,{\fs40}另外，排序函数不仅仅对最简单的情况排序，也可以对稍微复杂点的情况排序，\N在某些时候,比较的数据不是一个，是"组合"的形式出现的，比如现在xxx这个表里的每个元素都是一\N个表，但是你又想对这xxx进行排序，那么你就可以设定一个东西让它能够比较。比如现在如果自\N定义一个函数，那么给这个自定义函数传入参数时,它的参数肯定是个表对吧，比如function(a,b)\N的话，那a如果是 {id=55,n="ddy24"｝而b是 {id=10,n="40ssy"｝那么这两个表肯定没法比较大\N小吧，所以此时就要设定一个规则了，比如你比较的时候当然不是a>b这种比较，而是你可以比较\Na.id和b.id的大小，比如可以这样a.id>b.id
Dialogue: 0,0:14:35.14,0:14:49.99,Default,,0,0,0,,可以看到，现在排序以后，xxx这个表就改变了，顺序就变成你想要的了，这个表里的\N每个表中表的id这个下标的值都从大到小的排列了
Dialogue: 0,0:16:50.94,0:16:50.98,Default,,0,0,0,,
