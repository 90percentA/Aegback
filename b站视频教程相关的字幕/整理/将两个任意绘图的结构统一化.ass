[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1440
PlayResY: 860

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: D:/Downloads/Telegram Desktop/电脑批量测试【原创首发】/新建文件夹/将两个任意绘图的结构统一化.mp4
Video File: D:/Downloads/Telegram Desktop/电脑批量测试【原创首发】/新建文件夹/将两个任意绘图的结构统一化.mp4
Video AR Mode: 4
Video AR Value: 1.674419
Video Zoom Percent: 0.750000
Scroll Position: 7
Active Line: 7
Video Position: 6156

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,更纱黑体 SC Semibold,40,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:03.21,0:06:34.36,Default,,0,0,0,,{\p1\c&H1E1E1E&\bord0\shad0\pos(376.983,20.573)}m 59 67 l 821 65 818 85 62 85
Dialogue: 0,0:00:00.00,0:00:11.99,Default,,0,0,0,,{\fs39}上个视频讲了如何将两个单个m的绘图进行结构统一。这个视频就接着讲如何将任意两个"标准"的绘图\N代码给进行统一
Dialogue: 0,0:00:11.99,0:00:31.25,Default,,0,0,0,,这个函数两个参数，填两个“标准”的绘图代码，当然有多少个m无所谓、有没有直线无所谓\N总之，函数用来将任意两个“标准”的绘图字符串的结构进行统一，最后函数返回统一后的、结构\N一样的两个绘图代码
Dialogue: 0,0:00:31.25,0:00:52.65,Default,,0,0,0,,那具体来说，两个多m的绘图是怎么统一结构的呢：首先把两个绘图按m拆开，拆开以后放进表里\N如果两个绘图的m数目一样的话，当然就可以直接for循环把这两个绘图的每个m的结构的统一了，\N用上个视频讲的辅助函数就可以了。
Dialogue: 0,0:00:52.65,0:01:59.98,Default,,0,0,0,,{\fs39}那么如果两个绘图的m数量不同呢？比如#s1>#s2的话，那么就先把#s2这么多的m给相应地统一了\N然后再补上足够的m即可，而给s2补的m是什么样的呢，当然就得和s1里对应的m的结构一样。比如\Ns1若有13个m、s2若有5个m，那么s2就要补8个m，所以s2的第6个m就该和s1的第六个m结构一样\Ns2的第七个m就该和s1的第七个m结构一样,以此类推。那么怎么保证补的m的结构是一样的呢：这个\N直接用gsub就好了，当然因为补的m是紧接着原本绘图后面的,所以还是那回事，先获取到绘图2的最\N后一个点，也就是s2[#s2]的最后一个点，然后你补的m就是用相应的s1的m经过gsub替换以后得到
Dialogue: 0,0:01:59.98,0:02:57.18,Default,,0,0,0,,{\fs36\fn思源黑体 CN Medium}比方说，绘图1是m 0 0 l 4 2绘图2是m -8 -7 b -7 -5 -7 -2 -6 0 m 2 -2 l 1 3 l 5 3 m -2 -13 b -2 -12 -2 -11 -2 -10 b -1 -10 1 -10 2 -10\N那么此时就应该是绘图1需要补两个m,而且补的m应该分别和绘图2的第二个、第三个m的结构一样。那你直接gsub替换不就行了吗\N现在绘图1的最后一个点是4 2所以绘图1补的第一个m是"m 2 -2 l 1 3 l 5 3 "里的坐标都替换为4 2后的字符串,即"m 4 2 l 4 2 l 4 2 "\N然后绘图1要补的第二个m就是"m -2 -13 b -2 -12 -2 -11 -2 -10 b -1 -10 1 -10 2 -10"这里面的坐标都替换为4 2后所得的字符串，即\N"m 4 2 b 4 2 4 2 4 2 b 4 2 4 2 4 2"这样就能保证补的m和另一个绘图相应的m的结构是一样的了。
Dialogue: 0,0:02:57.18,0:03:41.01,Default,,0,0,0,,虽然从之前的几个视频就一直在重复讲原理类似的统一字符串的操作，但是不知道有没有讲清楚。\N再啰嗦地全部理一遍。首先，如果两个绘图m数量不一样,假若m较少的那个绘图的m总数为n，那么\N就先用之前讲的统一两个单m绘图的函数将这两个绘图的前面n个m的结构都进行统一，然后再给m\N较少的那个绘图补足m，并且补的m的结构必须和另一个绘图相应的m的结构一样,所以这里直接用\Ngsub来替换一下坐标即可，这样就能很简单的得到结构一样的要补的m了
Dialogue: 0,0:03:41.01,0:03:50.51,Default,,0,0,0,,其实你看这些代码的写法就知道，其实和之前讲的函数里用的方法就基本相同，应该是很好理解的
Dialogue: 0,0:04:16.11,0:04:36.71,Default,,0,0,0,,最后操作完以后就得到了m数量一样且里面相应的m的结构相同的两个表\N所以直接连接这两个表，然后返回一下就行了。返回的这两个字符串就是结构完全统一的多m绘图
Dialogue: 0,0:05:08.88,0:05:38.28,Default,,0,0,0,,还有当然，也反复强调过，这个函数可以将任意两个“标准”的绘图代码的结构统一化，所以填的\N参数必须是两个标准的绘图代码。很早之前讲过怎么将任意字符串标准化、怎么将Yutils的文字绘图\N给标准化，现在给函数填参数普通来说就该默认填"标准"的绘图代码，怎么也没有理由填不标准的,\N所以一定要记住填标准绘图代码
Dialogue: 0,0:06:49.61,0:07:03.31,Default,,0,0,0,,现在来用一下刚刚的函数看一看，能否把两个多m绘图的结构给统一且不改变两个绘图原本的形状
Dialogue: 0,0:08:02.71,0:08:15.18,Default,,0,0,0,,显然现在，就结构统一了
Dialogue: 0,0:08:50.88,0:09:22.31,Default,,0,0,0,,结构统一的两个绘图，如果要从一个连续变形为另一个就简单了，只需要计算它们对应的点的坐标\N的中间数值即可,就像之前视频已经讲过的那样。绘图1的第一个点渐渐变为绘图2的第一个点,绘图1\N的第2个点渐渐变为绘图2的第2个点，绘图1的第3个点渐渐变为绘图2的第3个点，以此类推，因为\N它们的结构都一样，所以要连续变形就只用考虑点的变化即可
Dialogue: 0,0:09:22.31,0:09:24.31,Default,,0,0,0,,
